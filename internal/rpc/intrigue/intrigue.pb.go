// Code generated by protoc-gen-go. DO NOT EDIT.
// source: intrigue.proto

package intrigue

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NewServiceRequest struct {
	Service              *NewService `protobuf:"bytes,1,opt,name=Service,proto3" json:"Service,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NewServiceRequest) Reset()         { *m = NewServiceRequest{} }
func (m *NewServiceRequest) String() string { return proto.CompactTextString(m) }
func (*NewServiceRequest) ProtoMessage()    {}
func (*NewServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{0}
}

func (m *NewServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewServiceRequest.Unmarshal(m, b)
}
func (m *NewServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewServiceRequest.Marshal(b, m, deterministic)
}
func (m *NewServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewServiceRequest.Merge(m, src)
}
func (m *NewServiceRequest) XXX_Size() int {
	return xxx_messageInfo_NewServiceRequest.Size(m)
}
func (m *NewServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewServiceRequest proto.InternalMessageInfo

func (m *NewServiceRequest) GetService() *NewService {
	if m != nil {
		return m.Service
	}
	return nil
}

type Receipt struct {
	ServiceInfo          *ServiceSummary `protobuf:"bytes,1,opt,name=serviceInfo,proto3" json:"serviceInfo,omitempty"`
	Message              string          `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Followup             string          `protobuf:"bytes,3,opt,name=Followup,proto3" json:"Followup,omitempty"`
	Error                string          `protobuf:"bytes,10,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Receipt) Reset()         { *m = Receipt{} }
func (m *Receipt) String() string { return proto.CompactTextString(m) }
func (*Receipt) ProtoMessage()    {}
func (*Receipt) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{1}
}

func (m *Receipt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Receipt.Unmarshal(m, b)
}
func (m *Receipt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Receipt.Marshal(b, m, deterministic)
}
func (m *Receipt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Receipt.Merge(m, src)
}
func (m *Receipt) XXX_Size() int {
	return xxx_messageInfo_Receipt.Size(m)
}
func (m *Receipt) XXX_DiscardUnknown() {
	xxx_messageInfo_Receipt.DiscardUnknown(m)
}

var xxx_messageInfo_Receipt proto.InternalMessageInfo

func (m *Receipt) GetServiceInfo() *ServiceSummary {
	if m != nil {
		return m.ServiceInfo
	}
	return nil
}

func (m *Receipt) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Receipt) GetFollowup() string {
	if m != nil {
		return m.Followup
	}
	return ""
}

func (m *Receipt) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type DataRequest struct {
	Request              *Request `protobuf:"bytes,1,opt,name=Request,proto3" json:"Request,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataRequest) Reset()         { *m = DataRequest{} }
func (m *DataRequest) String() string { return proto.CompactTextString(m) }
func (*DataRequest) ProtoMessage()    {}
func (*DataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{2}
}

func (m *DataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataRequest.Unmarshal(m, b)
}
func (m *DataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataRequest.Marshal(b, m, deterministic)
}
func (m *DataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataRequest.Merge(m, src)
}
func (m *DataRequest) XXX_Size() int {
	return xxx_messageInfo_DataRequest.Size(m)
}
func (m *DataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DataRequest proto.InternalMessageInfo

func (m *DataRequest) GetRequest() *Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *DataRequest) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type DataResponse struct {
	Responder            *Responder `protobuf:"bytes,2,opt,name=Responder,proto3" json:"Responder,omitempty"`
	Error                string     `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DataResponse) Reset()         { *m = DataResponse{} }
func (m *DataResponse) String() string { return proto.CompactTextString(m) }
func (*DataResponse) ProtoMessage()    {}
func (*DataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{3}
}

func (m *DataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataResponse.Unmarshal(m, b)
}
func (m *DataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataResponse.Marshal(b, m, deterministic)
}
func (m *DataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataResponse.Merge(m, src)
}
func (m *DataResponse) XXX_Size() int {
	return xxx_messageInfo_DataResponse.Size(m)
}
func (m *DataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DataResponse proto.InternalMessageInfo

func (m *DataResponse) GetResponder() *Responder {
	if m != nil {
		return m.Responder
	}
	return nil
}

func (m *DataResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type WhoIsRequest struct {
	Sender               string   `protobuf:"bytes,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=Target,proto3" json:"Target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WhoIsRequest) Reset()         { *m = WhoIsRequest{} }
func (m *WhoIsRequest) String() string { return proto.CompactTextString(m) }
func (*WhoIsRequest) ProtoMessage()    {}
func (*WhoIsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{4}
}

func (m *WhoIsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WhoIsRequest.Unmarshal(m, b)
}
func (m *WhoIsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WhoIsRequest.Marshal(b, m, deterministic)
}
func (m *WhoIsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WhoIsRequest.Merge(m, src)
}
func (m *WhoIsRequest) XXX_Size() int {
	return xxx_messageInfo_WhoIsRequest.Size(m)
}
func (m *WhoIsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WhoIsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WhoIsRequest proto.InternalMessageInfo

func (m *WhoIsRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *WhoIsRequest) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type WhoIsResponse struct {
	TargetAddress        string   `protobuf:"bytes,1,opt,name=TargetAddress,proto3" json:"TargetAddress,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WhoIsResponse) Reset()         { *m = WhoIsResponse{} }
func (m *WhoIsResponse) String() string { return proto.CompactTextString(m) }
func (*WhoIsResponse) ProtoMessage()    {}
func (*WhoIsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{5}
}

func (m *WhoIsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WhoIsResponse.Unmarshal(m, b)
}
func (m *WhoIsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WhoIsResponse.Marshal(b, m, deterministic)
}
func (m *WhoIsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WhoIsResponse.Merge(m, src)
}
func (m *WhoIsResponse) XXX_Size() int {
	return xxx_messageInfo_WhoIsResponse.Size(m)
}
func (m *WhoIsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WhoIsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WhoIsResponse proto.InternalMessageInfo

func (m *WhoIsResponse) GetTargetAddress() string {
	if m != nil {
		return m.TargetAddress
	}
	return ""
}

func (m *WhoIsResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type EmptyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyRequest) Reset()         { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()    {}
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{6}
}

func (m *EmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyRequest.Unmarshal(m, b)
}
func (m *EmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyRequest.Marshal(b, m, deterministic)
}
func (m *EmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRequest.Merge(m, src)
}
func (m *EmptyRequest) XXX_Size() int {
	return xxx_messageInfo_EmptyRequest.Size(m)
}
func (m *EmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRequest proto.InternalMessageInfo

type ServiceUpdate struct {
	Request              string   `protobuf:"bytes,1,opt,name=Request,proto3" json:"Request,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceUpdate) Reset()         { *m = ServiceUpdate{} }
func (m *ServiceUpdate) String() string { return proto.CompactTextString(m) }
func (*ServiceUpdate) ProtoMessage()    {}
func (*ServiceUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{7}
}

func (m *ServiceUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceUpdate.Unmarshal(m, b)
}
func (m *ServiceUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceUpdate.Marshal(b, m, deterministic)
}
func (m *ServiceUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceUpdate.Merge(m, src)
}
func (m *ServiceUpdate) XXX_Size() int {
	return xxx_messageInfo_ServiceUpdate.Size(m)
}
func (m *ServiceUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceUpdate proto.InternalMessageInfo

func (m *ServiceUpdate) GetRequest() string {
	if m != nil {
		return m.Request
	}
	return ""
}

func (m *ServiceUpdate) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ServiceUpdate) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type Action struct {
	Request              string   `protobuf:"bytes,1,opt,name=Request,proto3" json:"Request,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=Target,proto3" json:"Target,omitempty"`
	RemoteID             string   `protobuf:"bytes,5,opt,name=RemoteID,proto3" json:"RemoteID,omitempty"`
	Message              string   `protobuf:"bytes,4,opt,name=Message,proto3" json:"Message,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{8}
}

func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetRequest() string {
	if m != nil {
		return m.Request
	}
	return ""
}

func (m *Action) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Action) GetRemoteID() string {
	if m != nil {
		return m.RemoteID
	}
	return ""
}

func (m *Action) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Action) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type SummaryReceipt struct {
	Remotes              []*ProcessManager `protobuf:"bytes,1,rep,name=Remotes,proto3" json:"Remotes,omitempty"`
	Services             []*CoreService    `protobuf:"bytes,4,rep,name=Services,proto3" json:"Services,omitempty"`
	Error                string            `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SummaryReceipt) Reset()         { *m = SummaryReceipt{} }
func (m *SummaryReceipt) String() string { return proto.CompactTextString(m) }
func (*SummaryReceipt) ProtoMessage()    {}
func (*SummaryReceipt) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{9}
}

func (m *SummaryReceipt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SummaryReceipt.Unmarshal(m, b)
}
func (m *SummaryReceipt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SummaryReceipt.Marshal(b, m, deterministic)
}
func (m *SummaryReceipt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SummaryReceipt.Merge(m, src)
}
func (m *SummaryReceipt) XXX_Size() int {
	return xxx_messageInfo_SummaryReceipt.Size(m)
}
func (m *SummaryReceipt) XXX_DiscardUnknown() {
	xxx_messageInfo_SummaryReceipt.DiscardUnknown(m)
}

var xxx_messageInfo_SummaryReceipt proto.InternalMessageInfo

func (m *SummaryReceipt) GetRemotes() []*ProcessManager {
	if m != nil {
		return m.Remotes
	}
	return nil
}

func (m *SummaryReceipt) GetServices() []*CoreService {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *SummaryReceipt) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type Ping struct {
	Status               string   `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Time                 string   `protobuf:"bytes,2,opt,name=Time,proto3" json:"Time,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{10}
}

func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Ping) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *Ping) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type Pong struct {
	Status               string   `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Time                 string   `protobuf:"bytes,2,opt,name=Time,proto3" json:"Time,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{11}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Pong) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *Pong) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type ProcessManager struct {
	ID                   string     `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string     `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Address              string     `protobuf:"bytes,3,opt,name=Address,proto3" json:"Address,omitempty"`
	StartTime            string     `protobuf:"bytes,5,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	Errors               []string   `protobuf:"bytes,8,rep,name=Errors,proto3" json:"Errors,omitempty"`
	Status               string     `protobuf:"bytes,7,opt,name=Status,proto3" json:"Status,omitempty"`
	LogPath              string     `protobuf:"bytes,9,opt,name=LogPath,proto3" json:"LogPath,omitempty"`
	Services             []*Service `protobuf:"bytes,4,rep,name=Services,proto3" json:"Services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ProcessManager) Reset()         { *m = ProcessManager{} }
func (m *ProcessManager) String() string { return proto.CompactTextString(m) }
func (*ProcessManager) ProtoMessage()    {}
func (*ProcessManager) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{12}
}

func (m *ProcessManager) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessManager.Unmarshal(m, b)
}
func (m *ProcessManager) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessManager.Marshal(b, m, deterministic)
}
func (m *ProcessManager) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessManager.Merge(m, src)
}
func (m *ProcessManager) XXX_Size() int {
	return xxx_messageInfo_ProcessManager.Size(m)
}
func (m *ProcessManager) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessManager.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessManager proto.InternalMessageInfo

func (m *ProcessManager) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *ProcessManager) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProcessManager) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ProcessManager) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *ProcessManager) GetErrors() []string {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *ProcessManager) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ProcessManager) GetLogPath() string {
	if m != nil {
		return m.LogPath
	}
	return ""
}

func (m *ProcessManager) GetServices() []*Service {
	if m != nil {
		return m.Services
	}
	return nil
}

type NewService struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Aliases              []string `protobuf:"bytes,2,rep,name=Aliases,proto3" json:"Aliases,omitempty"`
	IsServer             bool     `protobuf:"varint,3,opt,name=IsServer,proto3" json:"IsServer,omitempty"`
	IsClient             bool     `protobuf:"varint,4,opt,name=IsClient,proto3" json:"IsClient,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewService) Reset()         { *m = NewService{} }
func (m *NewService) String() string { return proto.CompactTextString(m) }
func (*NewService) ProtoMessage()    {}
func (*NewService) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{13}
}

func (m *NewService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewService.Unmarshal(m, b)
}
func (m *NewService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewService.Marshal(b, m, deterministic)
}
func (m *NewService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewService.Merge(m, src)
}
func (m *NewService) XXX_Size() int {
	return xxx_messageInfo_NewService.Size(m)
}
func (m *NewService) XXX_DiscardUnknown() {
	xxx_messageInfo_NewService.DiscardUnknown(m)
}

var xxx_messageInfo_NewService proto.InternalMessageInfo

func (m *NewService) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NewService) GetAliases() []string {
	if m != nil {
		return m.Aliases
	}
	return nil
}

func (m *NewService) GetIsServer() bool {
	if m != nil {
		return m.IsServer
	}
	return false
}

func (m *NewService) GetIsClient() bool {
	if m != nil {
		return m.IsClient
	}
	return false
}

type ServiceSummary struct {
	Address              string   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	ID                   string   `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Fingerprint          string   `protobuf:"bytes,3,opt,name=Fingerprint,proto3" json:"Fingerprint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceSummary) Reset()         { *m = ServiceSummary{} }
func (m *ServiceSummary) String() string { return proto.CompactTextString(m) }
func (*ServiceSummary) ProtoMessage()    {}
func (*ServiceSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{14}
}

func (m *ServiceSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceSummary.Unmarshal(m, b)
}
func (m *ServiceSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceSummary.Marshal(b, m, deterministic)
}
func (m *ServiceSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceSummary.Merge(m, src)
}
func (m *ServiceSummary) XXX_Size() int {
	return xxx_messageInfo_ServiceSummary.Size(m)
}
func (m *ServiceSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceSummary.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceSummary proto.InternalMessageInfo

func (m *ServiceSummary) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ServiceSummary) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *ServiceSummary) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

type Service struct {
	Id   string `protobuf:"bytes,10,opt,name=Id,proto3" json:"Id,omitempty"`
	Name string `protobuf:"bytes,11,opt,name=Name,proto3" json:"Name,omitempty"`
	// bool Registered = 22;
	Mode                 string   `protobuf:"bytes,23,opt,name=Mode,proto3" json:"Mode,omitempty"`
	Address              string   `protobuf:"bytes,21,opt,name=Address,proto3" json:"Address,omitempty"`
	Path                 string   `protobuf:"bytes,12,opt,name=Path,proto3" json:"Path,omitempty"`
	LogPath              string   `protobuf:"bytes,20,opt,name=LogPath,proto3" json:"LogPath,omitempty"`
	Status               string   `protobuf:"bytes,14,opt,name=Status,proto3" json:"Status,omitempty"`
	Restarts             int32    `protobuf:"varint,15,opt,name=Restarts,proto3" json:"Restarts,omitempty"`
	Fails                int32    `protobuf:"varint,24,opt,name=Fails,proto3" json:"Fails,omitempty"`
	Pid                  int32    `protobuf:"varint,16,opt,name=Pid,proto3" json:"Pid,omitempty"`
	StartTime            string   `protobuf:"bytes,17,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	FailTime             string   `protobuf:"bytes,18,opt,name=FailTime,proto3" json:"FailTime,omitempty"`
	Errors               []string `protobuf:"bytes,19,rep,name=Errors,proto3" json:"Errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{15}
}

func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *Service) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Service) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Service) GetLogPath() string {
	if m != nil {
		return m.LogPath
	}
	return ""
}

func (m *Service) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Service) GetRestarts() int32 {
	if m != nil {
		return m.Restarts
	}
	return 0
}

func (m *Service) GetFails() int32 {
	if m != nil {
		return m.Fails
	}
	return 0
}

func (m *Service) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *Service) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *Service) GetFailTime() string {
	if m != nil {
		return m.FailTime
	}
	return ""
}

func (m *Service) GetErrors() []string {
	if m != nil {
		return m.Errors
	}
	return nil
}

type CoreService struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	Mode                 string   `protobuf:"bytes,3,opt,name=Mode,proto3" json:"Mode,omitempty"`
	ParentID             string   `protobuf:"bytes,5,opt,name=ParentID,proto3" json:"ParentID,omitempty"`
	Errors               []string `protobuf:"bytes,4,rep,name=Errors,proto3" json:"Errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoreService) Reset()         { *m = CoreService{} }
func (m *CoreService) String() string { return proto.CompactTextString(m) }
func (*CoreService) ProtoMessage()    {}
func (*CoreService) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{16}
}

func (m *CoreService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreService.Unmarshal(m, b)
}
func (m *CoreService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreService.Marshal(b, m, deterministic)
}
func (m *CoreService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreService.Merge(m, src)
}
func (m *CoreService) XXX_Size() int {
	return xxx_messageInfo_CoreService.Size(m)
}
func (m *CoreService) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreService.DiscardUnknown(m)
}

var xxx_messageInfo_CoreService proto.InternalMessageInfo

func (m *CoreService) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CoreService) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CoreService) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *CoreService) GetParentID() string {
	if m != nil {
		return m.ParentID
	}
	return ""
}

func (m *CoreService) GetErrors() []string {
	if m != nil {
		return m.Errors
	}
	return nil
}

//
//Data Handlers
type Request struct {
	Sender               string     `protobuf:"bytes,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Target               string     `protobuf:"bytes,2,opt,name=Target,proto3" json:"Target,omitempty"`
	Method               string     `protobuf:"bytes,3,opt,name=Method,proto3" json:"Method,omitempty"`
	Data1                string     `protobuf:"bytes,50,opt,name=Data1,proto3" json:"Data1,omitempty"`
	Tport                *Transport `protobuf:"bytes,55,opt,name=Tport,proto3" json:"Tport,omitempty"`
	Pload                *Payload   `protobuf:"bytes,60,opt,name=Pload,proto3" json:"Pload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{17}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *Request) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Request) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *Request) GetData1() string {
	if m != nil {
		return m.Data1
	}
	return ""
}

func (m *Request) GetTport() *Transport {
	if m != nil {
		return m.Tport
	}
	return nil
}

func (m *Request) GetPload() *Payload {
	if m != nil {
		return m.Pload
	}
	return nil
}

type Responder struct {
	Result               string     `protobuf:"bytes,50,opt,name=Result,proto3" json:"Result,omitempty"`
	ErrorString          string     `protobuf:"bytes,98,opt,name=ErrorString,proto3" json:"ErrorString,omitempty"`
	HadError             bool       `protobuf:"varint,99,opt,name=HadError,proto3" json:"HadError,omitempty"`
	Tport                *Transport `protobuf:"bytes,55,opt,name=Tport,proto3" json:"Tport,omitempty"`
	Pload                *Payload   `protobuf:"bytes,60,opt,name=Pload,proto3" json:"Pload,omitempty"`
	Err                  string     `protobuf:"bytes,65,opt,name=Err,proto3" json:"Err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Responder) Reset()         { *m = Responder{} }
func (m *Responder) String() string { return proto.CompactTextString(m) }
func (*Responder) ProtoMessage()    {}
func (*Responder) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{18}
}

func (m *Responder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Responder.Unmarshal(m, b)
}
func (m *Responder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Responder.Marshal(b, m, deterministic)
}
func (m *Responder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Responder.Merge(m, src)
}
func (m *Responder) XXX_Size() int {
	return xxx_messageInfo_Responder.Size(m)
}
func (m *Responder) XXX_DiscardUnknown() {
	xxx_messageInfo_Responder.DiscardUnknown(m)
}

var xxx_messageInfo_Responder proto.InternalMessageInfo

func (m *Responder) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *Responder) GetErrorString() string {
	if m != nil {
		return m.ErrorString
	}
	return ""
}

func (m *Responder) GetHadError() bool {
	if m != nil {
		return m.HadError
	}
	return false
}

func (m *Responder) GetTport() *Transport {
	if m != nil {
		return m.Tport
	}
	return nil
}

func (m *Responder) GetPload() *Payload {
	if m != nil {
		return m.Pload
	}
	return nil
}

func (m *Responder) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type Transport struct {
	Sender               string   `protobuf:"bytes,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=Target,proto3" json:"Target,omitempty"`
	Method               string   `protobuf:"bytes,3,opt,name=Method,proto3" json:"Method,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transport) Reset()         { *m = Transport{} }
func (m *Transport) String() string { return proto.CompactTextString(m) }
func (*Transport) ProtoMessage()    {}
func (*Transport) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{19}
}

func (m *Transport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transport.Unmarshal(m, b)
}
func (m *Transport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transport.Marshal(b, m, deterministic)
}
func (m *Transport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transport.Merge(m, src)
}
func (m *Transport) XXX_Size() int {
	return xxx_messageInfo_Transport.Size(m)
}
func (m *Transport) XXX_DiscardUnknown() {
	xxx_messageInfo_Transport.DiscardUnknown(m)
}

var xxx_messageInfo_Transport proto.InternalMessageInfo

func (m *Transport) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *Transport) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Transport) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

type Payload struct {
	Fields               map[string]*SubFields `protobuf:"bytes,50,rep,name=Fields,proto3" json:"Fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	JSON                 map[string][]byte     `protobuf:"bytes,55,rep,name=JSON,proto3" json:"JSON,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TextFields           map[string]string     `protobuf:"bytes,60,rep,name=TextFields,proto3" json:"TextFields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BoolFields           map[string]bool       `protobuf:"bytes,62,rep,name=BoolFields,proto3" json:"BoolFields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	ByteFields           map[string][]byte     `protobuf:"bytes,64,rep,name=ByteFields,proto3" json:"ByteFields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IntFields            map[string]int32      `protobuf:"bytes,66,rep,name=IntFields,proto3" json:"IntFields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Int64Fields          map[string]int64      `protobuf:"bytes,68,rep,name=Int64Fields,proto3" json:"Int64Fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	UintFields           map[string]uint32     `protobuf:"bytes,70,rep,name=UintFields,proto3" json:"UintFields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Uint64Fields         map[string]uint64     `protobuf:"bytes,72,rep,name=Uint64Fields,proto3" json:"Uint64Fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	DoubleFields         map[string]float64    `protobuf:"bytes,74,rep,name=DoubleFields,proto3" json:"DoubleFields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	FloatFields          map[string]float32    `protobuf:"bytes,76,rep,name=FloatFields,proto3" json:"FloatFields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Payload) Reset()         { *m = Payload{} }
func (m *Payload) String() string { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()    {}
func (*Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{20}
}

func (m *Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payload.Unmarshal(m, b)
}
func (m *Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payload.Marshal(b, m, deterministic)
}
func (m *Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payload.Merge(m, src)
}
func (m *Payload) XXX_Size() int {
	return xxx_messageInfo_Payload.Size(m)
}
func (m *Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_Payload proto.InternalMessageInfo

func (m *Payload) GetFields() map[string]*SubFields {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *Payload) GetJSON() map[string][]byte {
	if m != nil {
		return m.JSON
	}
	return nil
}

func (m *Payload) GetTextFields() map[string]string {
	if m != nil {
		return m.TextFields
	}
	return nil
}

func (m *Payload) GetBoolFields() map[string]bool {
	if m != nil {
		return m.BoolFields
	}
	return nil
}

func (m *Payload) GetByteFields() map[string][]byte {
	if m != nil {
		return m.ByteFields
	}
	return nil
}

func (m *Payload) GetIntFields() map[string]int32 {
	if m != nil {
		return m.IntFields
	}
	return nil
}

func (m *Payload) GetInt64Fields() map[string]int64 {
	if m != nil {
		return m.Int64Fields
	}
	return nil
}

func (m *Payload) GetUintFields() map[string]uint32 {
	if m != nil {
		return m.UintFields
	}
	return nil
}

func (m *Payload) GetUint64Fields() map[string]uint64 {
	if m != nil {
		return m.Uint64Fields
	}
	return nil
}

func (m *Payload) GetDoubleFields() map[string]float64 {
	if m != nil {
		return m.DoubleFields
	}
	return nil
}

func (m *Payload) GetFloatFields() map[string]float32 {
	if m != nil {
		return m.FloatFields
	}
	return nil
}

type SubFields struct {
	Sub                  []string `protobuf:"bytes,1,rep,name=Sub,proto3" json:"Sub,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubFields) Reset()         { *m = SubFields{} }
func (m *SubFields) String() string { return proto.CompactTextString(m) }
func (*SubFields) ProtoMessage()    {}
func (*SubFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f1d98c525e71fb, []int{21}
}

func (m *SubFields) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubFields.Unmarshal(m, b)
}
func (m *SubFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubFields.Marshal(b, m, deterministic)
}
func (m *SubFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubFields.Merge(m, src)
}
func (m *SubFields) XXX_Size() int {
	return xxx_messageInfo_SubFields.Size(m)
}
func (m *SubFields) XXX_DiscardUnknown() {
	xxx_messageInfo_SubFields.DiscardUnknown(m)
}

var xxx_messageInfo_SubFields proto.InternalMessageInfo

func (m *SubFields) GetSub() []string {
	if m != nil {
		return m.Sub
	}
	return nil
}

func init() {
	proto.RegisterType((*NewServiceRequest)(nil), "intrigue.NewServiceRequest")
	proto.RegisterType((*Receipt)(nil), "intrigue.Receipt")
	proto.RegisterType((*DataRequest)(nil), "intrigue.DataRequest")
	proto.RegisterType((*DataResponse)(nil), "intrigue.DataResponse")
	proto.RegisterType((*WhoIsRequest)(nil), "intrigue.WhoIsRequest")
	proto.RegisterType((*WhoIsResponse)(nil), "intrigue.WhoIsResponse")
	proto.RegisterType((*EmptyRequest)(nil), "intrigue.EmptyRequest")
	proto.RegisterType((*ServiceUpdate)(nil), "intrigue.ServiceUpdate")
	proto.RegisterType((*Action)(nil), "intrigue.Action")
	proto.RegisterType((*SummaryReceipt)(nil), "intrigue.SummaryReceipt")
	proto.RegisterType((*Ping)(nil), "intrigue.Ping")
	proto.RegisterType((*Pong)(nil), "intrigue.Pong")
	proto.RegisterType((*ProcessManager)(nil), "intrigue.ProcessManager")
	proto.RegisterType((*NewService)(nil), "intrigue.NewService")
	proto.RegisterType((*ServiceSummary)(nil), "intrigue.ServiceSummary")
	proto.RegisterType((*Service)(nil), "intrigue.Service")
	proto.RegisterType((*CoreService)(nil), "intrigue.CoreService")
	proto.RegisterType((*Request)(nil), "intrigue.Request")
	proto.RegisterType((*Responder)(nil), "intrigue.Responder")
	proto.RegisterType((*Transport)(nil), "intrigue.Transport")
	proto.RegisterType((*Payload)(nil), "intrigue.Payload")
	proto.RegisterMapType((map[string]bool)(nil), "intrigue.Payload.BoolFieldsEntry")
	proto.RegisterMapType((map[string][]byte)(nil), "intrigue.Payload.ByteFieldsEntry")
	proto.RegisterMapType((map[string]float64)(nil), "intrigue.Payload.DoubleFieldsEntry")
	proto.RegisterMapType((map[string]*SubFields)(nil), "intrigue.Payload.FieldsEntry")
	proto.RegisterMapType((map[string]float32)(nil), "intrigue.Payload.FloatFieldsEntry")
	proto.RegisterMapType((map[string]int64)(nil), "intrigue.Payload.Int64FieldsEntry")
	proto.RegisterMapType((map[string]int32)(nil), "intrigue.Payload.IntFieldsEntry")
	proto.RegisterMapType((map[string][]byte)(nil), "intrigue.Payload.JSONEntry")
	proto.RegisterMapType((map[string]string)(nil), "intrigue.Payload.TextFieldsEntry")
	proto.RegisterMapType((map[string]uint64)(nil), "intrigue.Payload.Uint64FieldsEntry")
	proto.RegisterMapType((map[string]uint32)(nil), "intrigue.Payload.UintFieldsEntry")
	proto.RegisterType((*SubFields)(nil), "intrigue.subFields")
}

func init() { proto.RegisterFile("intrigue.proto", fileDescriptor_22f1d98c525e71fb) }

var fileDescriptor_22f1d98c525e71fb = []byte{
	// 1449 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0xdf, 0x6e, 0x1b, 0xc5,
	0x17, 0xce, 0xfa, 0x4f, 0x6c, 0x1f, 0x3b, 0x6e, 0x32, 0x4d, 0xdb, 0x95, 0xfb, 0xab, 0x94, 0xdf,
	0x82, 0x44, 0x11, 0x22, 0xa8, 0xa6, 0x25, 0x50, 0x95, 0x40, 0x1a, 0x27, 0xd4, 0x6d, 0x13, 0xac,
	0x75, 0xaa, 0x0a, 0x89, 0x9b, 0x49, 0x3c, 0x75, 0x57, 0x6c, 0x76, 0xcc, 0xcc, 0xb8, 0xc5, 0xd7,
	0x48, 0xdc, 0x71, 0x01, 0x4f, 0xc0, 0x5b, 0x70, 0xc1, 0x03, 0xf0, 0x24, 0x20, 0xf1, 0x16, 0x68,
	0xfe, 0xec, 0xee, 0xec, 0xae, 0x5d, 0x13, 0x28, 0x17, 0xdc, 0xcd, 0x39, 0x73, 0xbe, 0x6f, 0xce,
	0x9c, 0xf9, 0x66, 0x66, 0x67, 0xa1, 0x1d, 0x44, 0x82, 0x05, 0xe3, 0x29, 0xd9, 0x9e, 0x30, 0x2a,
	0x28, 0xaa, 0xc7, 0xb6, 0xb7, 0x0f, 0x1b, 0xc7, 0xe4, 0xe5, 0x90, 0xb0, 0x17, 0xc1, 0x19, 0xf1,
	0xc9, 0xd7, 0x53, 0xc2, 0x05, 0xda, 0x86, 0x9a, 0xf1, 0xb8, 0xce, 0x96, 0x73, 0xb3, 0xd9, 0xdd,
	0xdc, 0x4e, 0x08, 0xac, 0xe8, 0x38, 0xc8, 0xfb, 0xc1, 0x81, 0x9a, 0x4f, 0xce, 0x48, 0x30, 0x11,
	0xe8, 0x2e, 0x34, 0xb9, 0x76, 0xf7, 0xa3, 0x67, 0xd4, 0xe0, 0xdd, 0x14, 0x6f, 0x30, 0xc3, 0xe9,
	0xf9, 0x39, 0x66, 0x33, 0xdf, 0x0e, 0x46, 0x2e, 0xd4, 0x8e, 0x08, 0xe7, 0x78, 0x4c, 0xdc, 0xd2,
	0x96, 0x73, 0xb3, 0xe1, 0xc7, 0x26, 0xea, 0x40, 0xfd, 0x90, 0x86, 0x21, 0x7d, 0x39, 0x9d, 0xb8,
	0x65, 0xd5, 0x95, 0xd8, 0x68, 0x13, 0xaa, 0x07, 0x8c, 0x51, 0xe6, 0x82, 0xea, 0xd0, 0x86, 0x37,
	0x80, 0x66, 0x0f, 0x0b, 0x1c, 0x4f, 0xe9, 0x1d, 0x99, 0xa1, 0x6a, 0x9a, 0x94, 0x36, 0xd2, 0x94,
	0x4c, 0x87, 0x1f, 0x47, 0xa4, 0x8c, 0x25, 0x9b, 0xf1, 0x29, 0xb4, 0x34, 0x23, 0x9f, 0xd0, 0x88,
	0x13, 0x74, 0x0b, 0x1a, 0xba, 0x3d, 0x22, 0x3a, 0xb2, 0xd9, 0xbd, 0x6c, 0x93, 0x9a, 0x2e, 0x3f,
	0x8d, 0x4a, 0x89, 0xcb, 0x36, 0xf1, 0x2e, 0xb4, 0x9e, 0x3e, 0xa7, 0x7d, 0x1e, 0x0f, 0x7f, 0x15,
	0x56, 0x87, 0x44, 0xb1, 0x3a, 0x2a, 0xcc, 0x58, 0xd2, 0x7f, 0x82, 0xd9, 0x98, 0x08, 0x93, 0x97,
	0xb1, 0xbc, 0x47, 0xb0, 0x66, 0xf0, 0x26, 0xb3, 0x37, 0x61, 0x4d, 0x77, 0xed, 0x8d, 0x46, 0x8c,
	0x70, 0x6e, 0x78, 0xb2, 0xce, 0x05, 0xc9, 0xb4, 0xa1, 0x75, 0x70, 0x3e, 0x11, 0x33, 0x93, 0x8c,
	0xf7, 0x05, 0xac, 0x99, 0x25, 0x7b, 0x32, 0x19, 0x61, 0x41, 0xe4, 0x22, 0xd9, 0x95, 0x6c, 0xa4,
	0x65, 0x5b, 0xbc, 0x7c, 0xf3, 0x87, 0xfa, 0xce, 0x81, 0xd5, 0xbd, 0x33, 0x11, 0xd0, 0xe8, 0x15,
	0xa4, 0x0b, 0x26, 0x2d, 0x15, 0xe1, 0x93, 0x73, 0x2a, 0x48, 0xbf, 0xe7, 0x56, 0xb5, 0x22, 0x62,
	0xdb, 0x4e, 0xa4, 0xf2, 0x57, 0x12, 0xf9, 0xde, 0x81, 0x76, 0x2c, 0x48, 0x23, 0xe3, 0xae, 0x4c,
	0x48, 0xd2, 0xc9, 0xe2, 0x95, 0xb3, 0x12, 0x1e, 0x30, 0x7a, 0x46, 0x38, 0x3f, 0xc2, 0x11, 0x1e,
	0x13, 0xe6, 0xc7, 0x81, 0xe8, 0x16, 0xd4, 0x4d, 0xa9, 0xb8, 0x5b, 0x51, 0xa0, 0x2b, 0x29, 0x68,
	0x9f, 0x32, 0x12, 0x6f, 0x9c, 0x24, 0x6c, 0x41, 0x3e, 0x0f, 0xa0, 0x32, 0x08, 0xa2, 0xb1, 0x12,
	0x82, 0xc0, 0x62, 0xca, 0x13, 0x21, 0x28, 0x0b, 0x21, 0xa8, 0x9c, 0x04, 0xe7, 0x71, 0x95, 0x55,
	0xfb, 0x15, 0x4c, 0xf4, 0xb5, 0x30, 0xfd, 0xe6, 0x40, 0x3b, 0x3b, 0x71, 0xd4, 0x86, 0x52, 0xbf,
	0x67, 0x08, 0x4b, 0xfd, 0x9e, 0x24, 0x3b, 0xc6, 0x29, 0x99, 0x6c, 0xcb, 0xa5, 0x88, 0x45, 0xa8,
	0xe9, 0x62, 0x13, 0xfd, 0x0f, 0x1a, 0x43, 0x81, 0x99, 0x50, 0xe3, 0xeb, 0x15, 0x4c, 0x1d, 0x32,
	0x61, 0x35, 0x2e, 0x77, 0xeb, 0x5b, 0x65, 0x99, 0xb0, 0xb6, 0xac, 0x89, 0xd4, 0x32, 0x13, 0x71,
	0xa1, 0xf6, 0x98, 0x8e, 0x07, 0x58, 0x3c, 0x77, 0x1b, 0x7a, 0x1c, 0x63, 0xa2, 0x77, 0x0b, 0xab,
	0xb2, 0x51, 0x38, 0x8d, 0xd2, 0x15, 0xf1, 0x18, 0x40, 0x7a, 0xc4, 0x25, 0x53, 0x72, 0x72, 0x53,
	0x0a, 0x03, 0xcc, 0x09, 0x77, 0x4b, 0x2a, 0xb7, 0xd8, 0x94, 0x9a, 0xec, 0x73, 0x09, 0x25, 0xba,
	0x78, 0x75, 0x3f, 0xb1, 0x75, 0xdf, 0x7e, 0x18, 0x90, 0x48, 0x28, 0x51, 0xaa, 0x3e, 0x6d, 0x7b,
	0x5f, 0x42, 0x3b, 0x7b, 0x2c, 0xda, 0x65, 0x73, 0xb2, 0x65, 0xd3, 0x45, 0x2f, 0x25, 0x45, 0xdf,
	0x82, 0xe6, 0x61, 0x10, 0x8d, 0x09, 0x9b, 0xb0, 0x20, 0x12, 0xa6, 0xc8, 0xb6, 0xcb, 0xfb, 0xb9,
	0x94, 0x1c, 0xe7, 0x0a, 0x3d, 0x32, 0x07, 0x65, 0xa9, 0x3f, 0x4a, 0xe6, 0xd7, 0xb4, 0xe6, 0x87,
	0xa0, 0x72, 0x44, 0x47, 0xc4, 0xbd, 0xa6, 0x7d, 0xb2, 0x6d, 0xe7, 0x73, 0x25, 0x9b, 0x0f, 0x82,
	0x8a, 0xaa, 0x7a, 0x4b, 0x47, 0xab, 0x92, 0x5b, 0x8b, 0xb1, 0x99, 0x5d, 0x8c, 0x74, 0xf9, 0xda,
	0x99, 0xe5, 0x53, 0xbb, 0x99, 0xcb, 0xd5, 0xe7, 0xee, 0xa5, 0x2d, 0xe7, 0x66, 0xd5, 0x4f, 0x6c,
	0xa9, 0xc7, 0x43, 0x1c, 0x84, 0xdc, 0x75, 0x55, 0x87, 0x36, 0xd0, 0x3a, 0x94, 0x07, 0xc1, 0xc8,
	0x5d, 0x57, 0x3e, 0xd9, 0xcc, 0x0a, 0x6a, 0x23, 0x2f, 0x28, 0x79, 0x83, 0xe0, 0x20, 0x54, 0x9d,
	0xc8, 0xdc, 0x20, 0xc6, 0xb6, 0xc4, 0x76, 0xd9, 0x16, 0x9b, 0xf7, 0xad, 0x03, 0x4d, 0x6b, 0xdf,
	0x2e, 0x54, 0x83, 0xa9, 0x4c, 0xa9, 0x50, 0x19, 0x55, 0xc7, 0xb2, 0x55, 0xc7, 0x0e, 0xd4, 0x07,
	0x98, 0x91, 0x48, 0xa4, 0xa7, 0x56, 0x6c, 0x5b, 0x59, 0x54, 0x32, 0x59, 0xfc, 0xe2, 0x40, 0xed,
	0x6f, 0x5e, 0x0d, 0xd2, 0x7f, 0x44, 0xc4, 0x73, 0x3a, 0x32, 0x59, 0x18, 0x4b, 0xd6, 0x54, 0xde,
	0x65, 0xb7, 0xdc, 0xae, 0xde, 0xe3, 0xca, 0x40, 0x6f, 0x43, 0xf5, 0x64, 0x42, 0x99, 0x70, 0x77,
	0xf2, 0xb7, 0xd9, 0x09, 0xc3, 0x11, 0x97, 0x5d, 0xbe, 0x8e, 0x40, 0x6f, 0x41, 0x75, 0x10, 0x52,
	0x3c, 0x72, 0xef, 0xe5, 0x6f, 0xd3, 0x01, 0x9e, 0xc9, 0x0e, 0x5f, 0xf7, 0x7b, 0xbf, 0x3a, 0xd6,
	0x35, 0x29, 0xf3, 0xf1, 0x09, 0x9f, 0x86, 0xc2, 0x0c, 0x6c, 0x2c, 0xa9, 0x62, 0x35, 0xdb, 0xa1,
	0x60, 0x41, 0x34, 0x76, 0x4f, 0xb5, 0x8a, 0x2d, 0x97, 0xac, 0xdc, 0x03, 0x3c, 0xd2, 0x07, 0xd3,
	0x99, 0xde, 0x3f, 0xb1, 0xfd, 0x6f, 0xe4, 0x2d, 0xf5, 0x75, 0xc0, 0x98, 0xbb, 0xa7, 0x32, 0x91,
	0x4d, 0x6f, 0x08, 0x8d, 0x84, 0xee, 0x75, 0x2d, 0x84, 0xf7, 0x53, 0x13, 0x6a, 0x66, 0x64, 0x74,
	0x07, 0x56, 0x0f, 0x03, 0x12, 0x8e, 0xb8, 0xdb, 0x55, 0xe7, 0xd4, 0x8d, 0x42, 0x72, 0xdb, 0xba,
	0xff, 0x20, 0x12, 0x6c, 0xe6, 0x9b, 0x60, 0xf4, 0x1e, 0x54, 0x1e, 0x0e, 0x3f, 0x3f, 0x76, 0x77,
	0x14, 0xe8, 0x7a, 0x11, 0x24, 0x7b, 0x35, 0x44, 0x05, 0xa2, 0x3d, 0x80, 0x13, 0xf2, 0x8d, 0x30,
	0x63, 0xdd, 0x53, 0xb0, 0xff, 0x17, 0x61, 0x69, 0x8c, 0x06, 0x5b, 0x20, 0x49, 0x71, 0x9f, 0xd2,
	0xd0, 0x50, 0xec, 0x2e, 0xa2, 0x48, 0x63, 0x0c, 0x45, 0xea, 0x50, 0x14, 0x33, 0x41, 0x0c, 0xc5,
	0xa7, 0x0b, 0x29, 0x92, 0x98, 0x98, 0x22, 0x71, 0xa0, 0x5d, 0x68, 0xf4, 0xa3, 0x78, 0x1e, 0xf7,
	0x15, 0xc3, 0x56, 0x91, 0x21, 0x09, 0xd1, 0x04, 0x29, 0x04, 0xf5, 0xa0, 0xd9, 0x8f, 0xc4, 0x07,
	0xb7, 0x0d, 0x43, 0x4f, 0x31, 0x78, 0x73, 0x19, 0xe2, 0x20, 0xcd, 0x61, 0xc3, 0xe4, 0x44, 0x9e,
	0x04, 0x49, 0x1a, 0x87, 0x8b, 0x26, 0x92, 0xc6, 0x98, 0x89, 0xa4, 0x0e, 0xf4, 0x19, 0xb4, 0xa4,
	0x95, 0x64, 0xf2, 0x40, 0x91, 0xbc, 0x31, 0x9f, 0x24, 0x9b, 0x4a, 0x06, 0x28, 0x89, 0x7a, 0x74,
	0x7a, 0x1a, 0xc6, 0x65, 0x7d, 0xb8, 0x88, 0xc8, 0x8e, 0x32, 0x44, 0xb6, 0x4b, 0x96, 0xe6, 0x30,
	0xa4, 0x38, 0x9e, 0xd5, 0xe3, 0x45, 0xa5, 0xb1, 0x82, 0x4c, 0x69, 0x2c, 0x4f, 0xe7, 0x58, 0x5e,
	0x4e, 0x49, 0x9f, 0xdc, 0x53, 0x5f, 0x91, 0x99, 0xd9, 0x31, 0xb2, 0x29, 0x77, 0xee, 0x0b, 0x1c,
	0x4e, 0x49, 0xf1, 0xfb, 0x99, 0x4f, 0x4f, 0x35, 0xd4, 0xd7, 0x11, 0x77, 0x4b, 0x1f, 0x3a, 0x9d,
	0x1d, 0x68, 0x24, 0x62, 0x9e, 0xc3, 0xb6, 0x69, 0xb3, 0xb5, 0x6c, 0xe0, 0xc7, 0x70, 0x29, 0x27,
	0xe7, 0x65, 0xf0, 0x46, 0x0e, 0x9e, 0x93, 0xf2, 0x32, 0x78, 0x3d, 0x0f, 0xcf, 0xca, 0xf8, 0x42,
	0xc9, 0xdf, 0x83, 0x76, 0x56, 0xc3, 0xcb, 0xd0, 0x55, 0x1b, 0xbd, 0x0b, 0xeb, 0x79, 0xfd, 0x2e,
	0xc3, 0x97, 0x73, 0xc9, 0xe7, 0xa4, 0xbb, 0x0c, 0xbe, 0x66, 0xc3, 0x3f, 0x81, 0x8d, 0x82, 0x68,
	0x97, 0x11, 0x54, 0x72, 0x04, 0x05, 0xb1, 0x2e, 0x23, 0x70, 0x72, 0x05, 0xc8, 0xab, 0x74, 0x19,
	0xbe, 0x64, 0xe1, 0xbd, 0x1b, 0xd0, 0x48, 0xc4, 0x28, 0x81, 0xc3, 0xe9, 0xa9, 0x7a, 0x13, 0x34,
	0x7c, 0xd9, 0xec, 0xfe, 0x51, 0x82, 0xea, 0x3e, 0x3e, 0xc5, 0x21, 0xda, 0x87, 0x4b, 0x3e, 0x19,
	0x07, 0x5c, 0x10, 0x16, 0x7f, 0x31, 0x5c, 0x9f, 0xfb, 0x70, 0xd6, 0x97, 0x79, 0x27, 0xf3, 0x04,
	0x55, 0xcf, 0x0e, 0x6f, 0x05, 0xdd, 0x07, 0xa4, 0x1f, 0x5a, 0x9a, 0x8a, 0x61, 0xf5, 0x3e, 0xba,
	0x56, 0xf8, 0x64, 0xd5, 0x41, 0xf3, 0x39, 0x76, 0xa0, 0x22, 0x2f, 0x74, 0x64, 0x3d, 0x3f, 0xac,
	0xb7, 0x70, 0xe7, 0x6a, 0xde, 0xad, 0x9f, 0x8d, 0xde, 0x0a, 0xba, 0x0b, 0x55, 0xf5, 0x92, 0x44,
	0x56, 0x88, 0xfd, 0x34, 0xed, 0x5c, 0x2b, 0xf8, 0x13, 0xec, 0x0e, 0xd4, 0xe2, 0xaf, 0xd7, 0xf5,
	0x34, 0x4a, 0xbf, 0xef, 0x3a, 0xf6, 0x0f, 0x80, 0xcc, 0x43, 0xcb, 0x5b, 0x91, 0x67, 0xc0, 0x5e,
	0x18, 0xbc, 0x20, 0xa8, 0x6d, 0x1d, 0x2f, 0x41, 0x34, 0xee, 0xd8, 0x36, 0x8d, 0xc6, 0xde, 0x4a,
	0xf7, 0x77, 0x47, 0x7e, 0x3f, 0xc8, 0xd7, 0x16, 0xba, 0x0d, 0xad, 0x63, 0x2a, 0x82, 0x67, 0x33,
	0xf3, 0x82, 0x2c, 0x8e, 0x59, 0xf0, 0xfc, 0x93, 0x24, 0x5f, 0xc7, 0xb2, 0x5c, 0x60, 0xa2, 0x3f,
	0x96, 0xa1, 0xb6, 0x4f, 0x23, 0xc1, 0x68, 0x88, 0xee, 0x40, 0x4b, 0x7d, 0xc6, 0xc6, 0x9a, 0x2a,
	0x26, 0xbe, 0x40, 0x04, 0x6d, 0xf3, 0x09, 0x7d, 0x41, 0xe0, 0x6d, 0x68, 0x3e, 0x0a, 0xc2, 0xf0,
	0xc2, 0xc3, 0xfd, 0x27, 0x2a, 0x8b, 0x3e, 0x02, 0x18, 0x0a, 0x3a, 0x31, 0xaf, 0x32, 0x4b, 0xe7,
	0xf6, 0x5f, 0x8f, 0xb9, 0xa3, 0x9c, 0xae, 0xaa, 0x9f, 0x67, 0xef, 0xff, 0x19, 0x00, 0x00, 0xff,
	0xff, 0xaa, 0xda, 0xe5, 0x28, 0x4e, 0x13, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CabalClient is the client API for Cabal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CabalClient interface {
	RegisterService(ctx context.Context, in *NewServiceRequest, opts ...grpc.CallOption) (*Receipt, error)
	UpdateRegistration(ctx context.Context, in *ServiceUpdate, opts ...grpc.CallOption) (*Receipt, error)
	Data(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*DataResponse, error)
	WhoIs(ctx context.Context, in *WhoIsRequest, opts ...grpc.CallOption) (*WhoIsResponse, error)
	Summary(ctx context.Context, in *Action, opts ...grpc.CallOption) (*SummaryReceipt, error)
	Alive(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error)
}

type cabalClient struct {
	cc *grpc.ClientConn
}

func NewCabalClient(cc *grpc.ClientConn) CabalClient {
	return &cabalClient{cc}
}

func (c *cabalClient) RegisterService(ctx context.Context, in *NewServiceRequest, opts ...grpc.CallOption) (*Receipt, error) {
	out := new(Receipt)
	err := c.cc.Invoke(ctx, "/intrigue.Cabal/RegisterService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cabalClient) UpdateRegistration(ctx context.Context, in *ServiceUpdate, opts ...grpc.CallOption) (*Receipt, error) {
	out := new(Receipt)
	err := c.cc.Invoke(ctx, "/intrigue.Cabal/UpdateRegistration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cabalClient) Data(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*DataResponse, error) {
	out := new(DataResponse)
	err := c.cc.Invoke(ctx, "/intrigue.Cabal/Data", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cabalClient) WhoIs(ctx context.Context, in *WhoIsRequest, opts ...grpc.CallOption) (*WhoIsResponse, error) {
	out := new(WhoIsResponse)
	err := c.cc.Invoke(ctx, "/intrigue.Cabal/WhoIs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cabalClient) Summary(ctx context.Context, in *Action, opts ...grpc.CallOption) (*SummaryReceipt, error) {
	out := new(SummaryReceipt)
	err := c.cc.Invoke(ctx, "/intrigue.Cabal/Summary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cabalClient) Alive(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error) {
	out := new(Pong)
	err := c.cc.Invoke(ctx, "/intrigue.Cabal/Alive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CabalServer is the server API for Cabal service.
type CabalServer interface {
	RegisterService(context.Context, *NewServiceRequest) (*Receipt, error)
	UpdateRegistration(context.Context, *ServiceUpdate) (*Receipt, error)
	Data(context.Context, *DataRequest) (*DataResponse, error)
	WhoIs(context.Context, *WhoIsRequest) (*WhoIsResponse, error)
	Summary(context.Context, *Action) (*SummaryReceipt, error)
	Alive(context.Context, *Ping) (*Pong, error)
}

func RegisterCabalServer(s *grpc.Server, srv CabalServer) {
	s.RegisterService(&_Cabal_serviceDesc, srv)
}

func _Cabal_RegisterService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CabalServer).RegisterService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intrigue.Cabal/RegisterService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CabalServer).RegisterService(ctx, req.(*NewServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cabal_UpdateRegistration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CabalServer).UpdateRegistration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intrigue.Cabal/UpdateRegistration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CabalServer).UpdateRegistration(ctx, req.(*ServiceUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cabal_Data_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CabalServer).Data(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intrigue.Cabal/Data",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CabalServer).Data(ctx, req.(*DataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cabal_WhoIs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WhoIsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CabalServer).WhoIs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intrigue.Cabal/WhoIs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CabalServer).WhoIs(ctx, req.(*WhoIsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cabal_Summary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Action)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CabalServer).Summary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intrigue.Cabal/Summary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CabalServer).Summary(ctx, req.(*Action))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cabal_Alive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ping)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CabalServer).Alive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intrigue.Cabal/Alive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CabalServer).Alive(ctx, req.(*Ping))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cabal_serviceDesc = grpc.ServiceDesc{
	ServiceName: "intrigue.Cabal",
	HandlerType: (*CabalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterService",
			Handler:    _Cabal_RegisterService_Handler,
		},
		{
			MethodName: "UpdateRegistration",
			Handler:    _Cabal_UpdateRegistration_Handler,
		},
		{
			MethodName: "Data",
			Handler:    _Cabal_Data_Handler,
		},
		{
			MethodName: "WhoIs",
			Handler:    _Cabal_WhoIs_Handler,
		},
		{
			MethodName: "Summary",
			Handler:    _Cabal_Summary_Handler,
		},
		{
			MethodName: "Alive",
			Handler:    _Cabal_Alive_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "intrigue.proto",
}

// RemoteClient is the client API for Remote service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RemoteClient interface {
	NotifyAction(ctx context.Context, in *Action, opts ...grpc.CallOption) (*Action, error)
	Summary(ctx context.Context, in *Action, opts ...grpc.CallOption) (*SummaryReceipt, error)
	UpdateRegistration(ctx context.Context, in *ServiceUpdate, opts ...grpc.CallOption) (*Receipt, error)
	Alive(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error)
}

type remoteClient struct {
	cc *grpc.ClientConn
}

func NewRemoteClient(cc *grpc.ClientConn) RemoteClient {
	return &remoteClient{cc}
}

func (c *remoteClient) NotifyAction(ctx context.Context, in *Action, opts ...grpc.CallOption) (*Action, error) {
	out := new(Action)
	err := c.cc.Invoke(ctx, "/intrigue.Remote/NotifyAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) Summary(ctx context.Context, in *Action, opts ...grpc.CallOption) (*SummaryReceipt, error) {
	out := new(SummaryReceipt)
	err := c.cc.Invoke(ctx, "/intrigue.Remote/Summary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) UpdateRegistration(ctx context.Context, in *ServiceUpdate, opts ...grpc.CallOption) (*Receipt, error) {
	out := new(Receipt)
	err := c.cc.Invoke(ctx, "/intrigue.Remote/UpdateRegistration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) Alive(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error) {
	out := new(Pong)
	err := c.cc.Invoke(ctx, "/intrigue.Remote/Alive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RemoteServer is the server API for Remote service.
type RemoteServer interface {
	NotifyAction(context.Context, *Action) (*Action, error)
	Summary(context.Context, *Action) (*SummaryReceipt, error)
	UpdateRegistration(context.Context, *ServiceUpdate) (*Receipt, error)
	Alive(context.Context, *Ping) (*Pong, error)
}

func RegisterRemoteServer(s *grpc.Server, srv RemoteServer) {
	s.RegisterService(&_Remote_serviceDesc, srv)
}

func _Remote_NotifyAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Action)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).NotifyAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intrigue.Remote/NotifyAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).NotifyAction(ctx, req.(*Action))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_Summary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Action)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).Summary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intrigue.Remote/Summary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).Summary(ctx, req.(*Action))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_UpdateRegistration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).UpdateRegistration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intrigue.Remote/UpdateRegistration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).UpdateRegistration(ctx, req.(*ServiceUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_Alive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ping)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).Alive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intrigue.Remote/Alive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).Alive(ctx, req.(*Ping))
	}
	return interceptor(ctx, in, info, handler)
}

var _Remote_serviceDesc = grpc.ServiceDesc{
	ServiceName: "intrigue.Remote",
	HandlerType: (*RemoteServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NotifyAction",
			Handler:    _Remote_NotifyAction_Handler,
		},
		{
			MethodName: "Summary",
			Handler:    _Remote_Summary_Handler,
		},
		{
			MethodName: "UpdateRegistration",
			Handler:    _Remote_UpdateRegistration_Handler,
		},
		{
			MethodName: "Alive",
			Handler:    _Remote_Alive_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "intrigue.proto",
}

// ControlClient is the client API for Control service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControlClient interface {
	StartService(ctx context.Context, in *Action, opts ...grpc.CallOption) (*Receipt, error)
	RestartService(ctx context.Context, in *Action, opts ...grpc.CallOption) (*Receipt, error)
	KillService(ctx context.Context, in *Action, opts ...grpc.CallOption) (*Receipt, error)
	Summary(ctx context.Context, in *Action, opts ...grpc.CallOption) (*SummaryReceipt, error)
	UpdateRegistration(ctx context.Context, in *ServiceUpdate, opts ...grpc.CallOption) (*Receipt, error)
	Alive(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error)
	StopServer(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*Receipt, error)
}

type controlClient struct {
	cc *grpc.ClientConn
}

func NewControlClient(cc *grpc.ClientConn) ControlClient {
	return &controlClient{cc}
}

func (c *controlClient) StartService(ctx context.Context, in *Action, opts ...grpc.CallOption) (*Receipt, error) {
	out := new(Receipt)
	err := c.cc.Invoke(ctx, "/intrigue.Control/StartService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) RestartService(ctx context.Context, in *Action, opts ...grpc.CallOption) (*Receipt, error) {
	out := new(Receipt)
	err := c.cc.Invoke(ctx, "/intrigue.Control/RestartService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) KillService(ctx context.Context, in *Action, opts ...grpc.CallOption) (*Receipt, error) {
	out := new(Receipt)
	err := c.cc.Invoke(ctx, "/intrigue.Control/KillService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) Summary(ctx context.Context, in *Action, opts ...grpc.CallOption) (*SummaryReceipt, error) {
	out := new(SummaryReceipt)
	err := c.cc.Invoke(ctx, "/intrigue.Control/Summary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) UpdateRegistration(ctx context.Context, in *ServiceUpdate, opts ...grpc.CallOption) (*Receipt, error) {
	out := new(Receipt)
	err := c.cc.Invoke(ctx, "/intrigue.Control/UpdateRegistration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) Alive(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error) {
	out := new(Pong)
	err := c.cc.Invoke(ctx, "/intrigue.Control/Alive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlClient) StopServer(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*Receipt, error) {
	out := new(Receipt)
	err := c.cc.Invoke(ctx, "/intrigue.Control/StopServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ControlServer is the server API for Control service.
type ControlServer interface {
	StartService(context.Context, *Action) (*Receipt, error)
	RestartService(context.Context, *Action) (*Receipt, error)
	KillService(context.Context, *Action) (*Receipt, error)
	Summary(context.Context, *Action) (*SummaryReceipt, error)
	UpdateRegistration(context.Context, *ServiceUpdate) (*Receipt, error)
	Alive(context.Context, *Ping) (*Pong, error)
	StopServer(context.Context, *EmptyRequest) (*Receipt, error)
}

func RegisterControlServer(s *grpc.Server, srv ControlServer) {
	s.RegisterService(&_Control_serviceDesc, srv)
}

func _Control_StartService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Action)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).StartService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intrigue.Control/StartService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).StartService(ctx, req.(*Action))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_RestartService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Action)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).RestartService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intrigue.Control/RestartService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).RestartService(ctx, req.(*Action))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_KillService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Action)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).KillService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intrigue.Control/KillService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).KillService(ctx, req.(*Action))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_Summary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Action)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).Summary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intrigue.Control/Summary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).Summary(ctx, req.(*Action))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_UpdateRegistration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).UpdateRegistration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intrigue.Control/UpdateRegistration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).UpdateRegistration(ctx, req.(*ServiceUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_Alive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ping)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).Alive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intrigue.Control/Alive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).Alive(ctx, req.(*Ping))
	}
	return interceptor(ctx, in, info, handler)
}

func _Control_StopServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServer).StopServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intrigue.Control/StopServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServer).StopServer(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Control_serviceDesc = grpc.ServiceDesc{
	ServiceName: "intrigue.Control",
	HandlerType: (*ControlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartService",
			Handler:    _Control_StartService_Handler,
		},
		{
			MethodName: "RestartService",
			Handler:    _Control_RestartService_Handler,
		},
		{
			MethodName: "KillService",
			Handler:    _Control_KillService_Handler,
		},
		{
			MethodName: "Summary",
			Handler:    _Control_Summary_Handler,
		},
		{
			MethodName: "UpdateRegistration",
			Handler:    _Control_UpdateRegistration_Handler,
		},
		{
			MethodName: "Alive",
			Handler:    _Control_Alive_Handler,
		},
		{
			MethodName: "StopServer",
			Handler:    _Control_StopServer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "intrigue.proto",
}
